#ifndef HERMIT_CORE_MODULES_HPP
#define HERMIT_CORE_MODULES_HPP

#include "core/nt.hpp"
#include "core/procs.hpp"

#include <windows.h>
#include <ntstatus.h>

// Generated by script/calc_hash_module
#define HASH_MODULE_BCRYPT      0xe4317f37
#define HASH_MODULE_CRYPT32     0xd3c8cc6e
#define HASH_MODULE_DBGHELP     0xcf3eb48b
#define HASH_MODULE_IPHLPAPI    0x3d524640
#define HASH_MODULE_KERNEL32    0xf4796887
#define HASH_MODULE_NETAPI32    0xa0ed44a7
#define HASH_MODULE_NTDLL       0x3cd7873f
#define HASH_MODULE_USER32      0xecf87bd5
#define HASH_MODULE_WINHTTP     0x136aa105

namespace Modules
{
    struct MODULES
    {
        HMODULE hAdvapi32;
        HMODULE hAmsi;
        HMODULE hBcrypt;
        HMODULE hCrypt32;
        HMODULE hDbghelp;
        HMODULE hIphlpapi;
        HMODULE hKernel32;
        HMODULE hNetapi32;
        HMODULE hNtdll;
        HMODULE hRpcrt4;
        HMODULE hShell32;
        HMODULE hUser32;
        HMODULE hWinHttp;
        HMODULE hWs2_32;
    };

    typedef MODULES *PMODULES;

    ULONG StringToHashModule(WCHAR* wStr, SIZE_T dwStrLen);
    PVOID GetModuleByHash(DWORD dwHash);
    PVOID LoadModule(Procs::PPROCS pProcs, LPWSTR lpDllName);
    VOID Free(PMODULES pModules, Procs::PPROCS pProcs);
}

#endif // HERMIT_CORE_MODULES_HPP